{
  "permissions": {
    "allow": [
      "WebSearch",
      "WebFetch(domain:truedermasa.com)",
      "Bash(node:*)",
      "Bash(psql:*)",
      "Bash(git --version)",
      "Bash(brew services:*)",
      "Bash(pg_isready:*)",
      "Bash(createdb:*)",
      "Read(//Users/raunakbohra/.claude/**)",
      "Bash(tree:*)",
      "WebFetch(domain:awsomedevs.medium.com)",
      "WebFetch(domain:dev.to)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:www.anthropic.com)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\ndocs: Add comprehensive documentation and Claude Code subagents\n\nAdded complete project documentation (23,000+ lines):\n- Architecture guides (portable Cloudflare/AWS architecture)\n- Development guidelines (TypeScript, React, security standards)\n- Operational guidelines (deployment, monitoring, compliance)\n- Feature guidelines (PWA, offline, i18n, accessibility)\n- Day 1-5 implementation plans (8-hour daily schedules)\n- Week 2-12 roadmap\n- Deployment guide (Cloudflare Workers + Pages)\n\nAdded 9 production-ready Claude Code subagents (4,456 lines):\n- code-reviewer: Enforces development guidelines\n- security-auditor: OWASP Top 10 compliance\n- test-engineer: Test coverage validation (70/60%)\n- architecture-agent: Hexagonal architecture patterns\n- documentation-agent: Maintains documentation\n- performance-optimizer: API/frontend performance\n- database-expert: Schema design and optimization\n- frontend-specialist: React/Tailwind best practices\n- devops-agent: Deployment and operations\n\nDocumentation structure:\n- docs/00-getting-started/ (onboarding, prompts)\n- docs/01-architecture/ (system design, portability)\n- docs/02-guidelines/ (development, operations, features)\n- docs/03-implementation-plans/ (day-by-day plans)\n- docs/04-deployment/ (Cloudflare deployment)\n- docs/05-references/ (planned)\n\nKey features:\n- Portable architecture (switch Cloudflare â†” AWS in 5-7 days)\n- Cost optimized (70% cheaper: $30 vs $132/month)\n- Performance optimized (75% faster: 15-50ms vs 100-200ms)\n- Zero vendor lock-in\n- Complete automation via AI agents\n\nReady to start Day 1 implementation.\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit:*)",
      "Bash(gh:*)",
      "Bash(npm --version)",
      "Bash(wrangler:*)",
      "Bash(CLOUDFLARE_API_TOKEN=50e738ecd29499ddb5da770fc370b35a79749 wrangler whoami)",
      "Bash(npm install)",
      "Bash(npx prisma generate:*)",
      "Bash(npx prisma migrate dev:*)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_EK1XpFYRye6M@ep-ancient-art-a1aag2jx-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require\" npx prisma migrate dev --name init_auth_models)",
      "Bash(git push:*)",
      "Bash(npm run dev:*)",
      "Bash(curl:*)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_EK1XpFYRye6M@ep-ancient-art-a1aag2jx-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require\" npx prisma migrate dev --name add_user_phone)",
      "Bash(npm create:*)",
      "Bash(npm install:*)",
      "Bash(cat:*)",
      "Bash(find:*)",
      "Bash(git check-ignore:*)",
      "Bash(npx playwright install:*)",
      "Bash(npx playwright test:*)",
      "Bash(npm uninstall:*)",
      "Bash(pkill:*)",
      "Bash(lsof:*)",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(done)",
      "Bash(if [ -f \"$file\" ])",
      "Bash(then)",
      "Bash(fi)",
      "Bash(npm run build:*)",
      "Bash(npx tsc:*)",
      "Read(//Users/raunakbohra/Desktop/**)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_EK1XpFYRye6M@ep-ancient-art-a1aag2jx-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require\" npx prisma migrate dev --name add_composite_indexes)",
      "Bash(openssl rand:*)",
      "Bash(npx wrangler pages deploy:*)",
      "Bash(CLOUDFLARE_ACCOUNT_ID=610762493d34333f1a6d72a037b345cf npx wrangler pages deploy dist --project-name=fieldforce-crm)",
      "Bash(CLOUDFLARE_ACCOUNT_ID=610762493d34333f1a6d72a037b345cf npx wrangler pages project create fieldforce-crm --production-branch=main)",
      "Bash(CLOUDFLARE_ACCOUNT_ID=610762493d34333f1a6d72a037b345cf npx wrangler pages deploy dist --project-name=fieldforce-crm --commit-dirty=true)",
      "Bash(CLOUDFLARE_ACCOUNT_ID=610762493d34333f1a6d72a037b345cf npx wrangler pages deploy web/dist --project-name=fieldforce-crm --commit-dirty=true)",
      "Bash(CLOUDFLARE_ACCOUNT_ID=610762493d34333f1a6d72a037b345cf npx wrangler pages deploy /Users/raunakbohra/Desktop/medical-CRM/web/dist --project-name=fieldforce-crm --commit-dirty=true)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_EK1XpFYRye6M@ep-ancient-art-a1aag2jx-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require\" npx prisma migrate deploy)",
      "Bash(npx wrangler r2 bucket:*)",
      "Bash(python3:*)",
      "Bash(npx wrangler r2 object list:*)",
      "Bash(CLOUDFLARE_ACCOUNT_ID=610762493d34333f1a6d72a037b345cf npx wrangler pages deployment list --project-name=fieldforce-crm)",
      "Bash(CLOUDFLARE_ACCOUNT_ID=610762493d34333f1a6d72a037b345cf npx wrangler pages domain add crm.raunakbohra.com --project-name=fieldforce-crm)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_EK1XpFYRye6M@ep-ancient-art-a1aag2jx-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require\" npx prisma migrate dev --name add_visits_model)",
      "Bash(R2_ACCESS_KEY_ID=63578ea9052b78fb2628619deff00f37 R2_SECRET_ACCESS_KEY=e0de7be8c75b2a7ced816895a0a74922f1a314efbae7d56887390b5c5784893d node cleanup-r2.js)",
      "Bash(npx wrangler:*)",
      "Bash(npm run deploy:*)",
      "Bash(CLOUDFLARE_ACCOUNT_ID=610762493d34333f1a6d72a037b345cf npx wrangler secret list)"
    ],
    "deny": [],
    "ask": []
  }
}
